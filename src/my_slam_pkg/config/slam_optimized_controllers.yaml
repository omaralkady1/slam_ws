
controller_manager:
  ros__parameters:
    update_rate: 100  # High frequency for smooth SLAM

# SLAM-OPTIMIZED Differential Drive Controller
diff_drive_controller:
  ros__parameters:
    # Wheel configuration
    left_wheel_names: ["front_left_wheel_joint", "rear_left_wheel_joint"]
    right_wheel_names: ["front_right_wheel_joint", "rear_right_wheel_joint"]
    
    # CRITICAL: Precise physical parameters
    wheel_separation: 0.34    # MEASURE PRECISELY
    wheel_radius: 0.05        # CALIBRATE WITH MOTOR TESTS
    
    # SLAM-OPTIMIZED: Fine-tuning multipliers
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0
    
    # HIGH-FREQUENCY publishing for SLAM
    publish_rate: 100.0              # 100Hz for smooth odometry
    odom_publish_frequency: 100.0    # Match controller rate
    
    # Frame configuration
    odom_frame_id: "odom"
    base_frame_id: "base_footprint"
    
    # ENABLE odometry calculation and TF
    publish_odom: true      # Calculate odometry from wheel encoders
    publish_odom_tf: true   # Publish odom->base_footprint transform
    
    # SLAM-OPTIMIZED: Low covariance for good encoder data
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    
    # Velocity limits for safe SLAM operation
    linear:
      x:
        has_velocity_limits: true
        max_velocity: 0.6
        min_velocity: -0.6
        has_acceleration_limits: true
        max_acceleration: 0.8
        min_acceleration: -0.8
        
    angular:
      z:
        has_velocity_limits: true
        max_velocity: 1.0
        min_velocity: -1.0
        has_acceleration_limits: true
        max_acceleration: 1.0
        min_acceleration: -1.0
    
    # SLAM-SPECIFIC: Closed-loop control
    open_loop: false
    enable_odom_tf: true
    
    # Timeout for safety
    cmd_vel_timeout: 0.5
    
    # Preserve turning radius during speed limiting
    preserve_turning_radius: true
    
    # Use encoder feedback for odometry calculation
    position_feedback: true
    velocity_feedback: true
